#!/usr/bin/env python

"""
Simple helper functions for Kippo-Malware
"""

import os
import argparse
import urlparse
from clint.textui import puts, indent


def parse_arguments():
    parser = argparse.ArgumentParser()
    parser.add_argument("--directory", default=os.getcwd() + os.path.sep + 'downloads',
                        help="Directory to save the files -- DEFAULT: <current>/downloads")
    parser.add_argument("--hostname", default="127.0.0.1", help="MySQL server hostname -- DEFAULT: 127.0.0.1")
    parser.add_argument("--port", type=int, default=3306, help="MySQL server port -- DEFAULT: 3306")
    parser.add_argument("--username", default="kippo", help="MySQL server username -- DEFAULT: kippo")
    parser.add_argument("--password", default="kippo", help="MySQL server password -- DEFAULT: kippo")
    parser.add_argument("--database", default="kippo", help="MySQL server database -- DEFAULT: kippo")
    parser.add_argument("--proxy", default=None, help="HTTP proxy (with protocol) -- DEFAULT: None -- EXAMPLES: "
                                                      "http://10.10.1.10:8080, http://user:pass@10.10.1.10:1080")
    parser.add_argument("--user-agent", default=None, help="Custom User-Agent -- DEFAULT: Environment-based")
    parser.add_argument("--debug", action="store_true", help="Enable debugging messages")
    args = parser.parse_args()
    if args.debug:
        print_args(args)
    return args


def normalize_urls(urls):
    #1. Strip whitespace and keep only the last part in case of spaces
    #2. Add protocol in front of urls which are not http or ftp
    #3. Remove duplicates from url list
    urls = [url.strip().split()[-1] for url in urls]
    urls = ['http://' + url if urlparse.urlparse(url).scheme != 'http' and urlparse.urlparse(url).scheme != 'ftp'
            else url for url in urls]
    urls = list(set(urls))
    return urls


def print_args(args):
    args = vars(args)
    print "\n{Arguments}:"
    with indent():
        for key, value in args.items():
            puts(key + ' = ' + str(value))


def print_urls(urls):
    print "\n{URL list}:"
    for url in urls:
        print url
    print "\nTotal: %d URLs" % len(urls)